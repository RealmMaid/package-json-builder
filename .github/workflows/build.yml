# .github/workflows/build.yml
# Okay, this is the one! Using the official, recommended way to set the Yarn version!

name: Build & Release Package Builder

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-release:
    
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      # Step 1: Check out your code
      - name: Check out Git repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js and explicitly set Yarn version
      # This is the magic bullet! The 'package-manager' input is the most
      # reliable way to tell the runner to use Corepack to set a specific Yarn version.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Enable Corepack and set Yarn version
        run: |
          corepack enable
          corepack prepare yarn@4.9.2 --activate

      # Step 3: Install dependencies
      # This will now use the correct version of Yarn that was just set up!
      - name: Install dependencies
        run: yarn install --immutable

      # Step 4: Build the distributable files!
      # 'yarn dist' will now run in the correct environment on each OS.
      - name: Build application
        run: yarn dist
      
      # Step 5: Upload the finished product!
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-builder-${{ matrix.os }}
          path: dist/
